# 1е задание
ubuntu@ip-172-31-18-45:~$ for n in {1..3}; do whoami; done
ubuntu
ubuntu
ubuntu

# 2е задание (простой вариант)
ubuntu@ip-172-31-18-45:~$ y=0
ubuntu@ip-172-31-18-45:~$ while [ $y -lt 101 ]
> do
>         echo $y
>         y=$(($y + 2))
> done
0
2
4
6
8
#......
90
92
94
96
98
100

# 2е задание (вариант с if-ом)
ubuntu@ip-172-31-18-45:~$ y=0
ubuntu@ip-172-31-18-45:~$ while [ $y -lt 101 ]
> do
>         if [ $(($y%2)) -eq 0 ]
>                 then echo $y
>         fi
>         y=$(($y + 1))
> done
0
2
4
6
8
#......
90
92
94
96
98
100

# 3е задание
ubuntu@ip-172-31-18-45:~$ crontab -l
no crontab for ubuntu
ubuntu@ip-172-31-18-45:~$ crontab -e
no crontab for ubuntu - using an empty one

Select an editor.  To change later, run 'select-editor'.
  1. /bin/nano        <---- easiest
  2. /usr/bin/vim.basic
  3. /usr/bin/vim.tiny
  4. /bin/ed

Choose 1-4 [1]: 1
# был открыт редактор nano для изменения crontab-а
crontab: installing new crontab
ubuntu@ip-172-31-18-45:~$ crontab -l
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

# создаём оригинальный файл
ubuntu@ip-172-31-18-45:~$ nano test.txt 
ubuntu@ip-172-31-18-45:~$ cat test.txt 
this is test file
for back-up
# создаём папку для back-up
ubuntu@ip-172-31-18-45:~$ mkdir cron-back-up
# создаём скрипт для копирования файла
ubuntu@ip-172-31-18-45:~$ nano cron-test.sh
ubuntu@ip-172-31-18-45:~$ cat cron-test.sh 
#!/bin/bash
cp /home/ubuntu/test.txt "/home/ubuntu/cron-back-up/backup-$(date +"%H%M%S").txt"

# задаём правило для запуска скрипта
ubuntu@ip-172-31-18-45:~$ crontab -e
crontab: installing new crontab
ubuntu@ip-172-31-18-45:~$ crontab -l
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
*/10 * * * * /home/ubuntu/cron-test.sh

# проверяем работу cron-а в syslog-е
ubuntu@ip-172-31-18-45:~$ tail -f /var/log/syslog | grep -i cron
Aug 11 19:10:42 ip-172-31-18-45 crontab[7242]: (ubuntu) END EDIT (ubuntu)
Aug 11 19:11:01 ip-172-31-18-45 cron[486]: (ubuntu) RELOAD (crontabs/ubuntu)
Aug 11 19:12:01 ip-172-31-18-45 CRON[7260]: (ubuntu) CMD (/home/ubuntu/cron-test.sh)
Aug 11 19:13:30 ip-172-31-18-45 crontab[7268]: (ubuntu) BEGIN EDIT (ubuntu)
Aug 11 19:14:01 ip-172-31-18-45 crontab[7268]: (ubuntu) REPLACE (ubuntu)
Aug 11 19:14:01 ip-172-31-18-45 crontab[7268]: (ubuntu) END EDIT (ubuntu)
Aug 11 19:14:01 ip-172-31-18-45 cron[486]: (ubuntu) RELOAD (crontabs/ubuntu)
Aug 11 19:14:04 ip-172-31-18-45 crontab[7273]: (ubuntu) LIST (ubuntu)
Aug 11 19:17:01 ip-172-31-18-45 CRON[7291]: (root) CMD (   cd / && run-parts --report /etc/cron.hourly)
Aug 11 19:20:01 ip-172-31-18-45 CRON[7299]: (ubuntu) CMD (/home/ubuntu/cron-test.sh)
Aug 11 19:30:01 ip-172-31-18-45 CRON[7327]: (ubuntu) CMD (/home/ubuntu/cron-test.sh)
^C
ubuntu@ip-172-31-18-45:~$ ls -l cron-back-up
total 12
-rw-rw-r-- 1 ubuntu ubuntu 30 Aug 11 19:12 backup-191201.txt
-rw-rw-r-- 1 ubuntu ubuntu 30 Aug 11 19:20 backup-192001.txt
-rw-rw-r-- 1 ubuntu ubuntu 30 Aug 11 19:30 backup-193001.txt

# проверяем содержание файла
ubuntu@ip-172-31-18-45:~$ cat cron-back-up/backup-193001.txt
this is test file
for back-up
